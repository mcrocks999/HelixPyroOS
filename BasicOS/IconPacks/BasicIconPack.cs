using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using SystemUtils;

namespace BasicOS
{
    public class BasicIconPack : IconPack
    {
        public override int[] getChar(char c)
        {
            if (c == 'N')
            {
                return new int[]{
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 7, 0, 7, 0, 7, 0, 0, 0,
                    0, 0,56,64,56,64,56,64, 0, 0,
                    0,64,55,11,55,55,55,55,64, 0,
                    0,64,55,11,55,55,55,55,64, 0,
                    0,64,56,11,56,56,56,56,53, 0,
                    0,64,55,11,55,55,55,55,64, 0,
                    0,64,56,11,56,56,56,56,56, 0,
                    0,64,55,11,55,55,55,55,64, 0,
                    0, 0,64,64,64,64,20,64, 0, 0,
                };
            }
            else if (c == 'C')
            {
                return new int[]{
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0,64,64,64,64,64,64,64,64, 0,
                    0,64,17,17,17,17,17,17,64, 0,
                    0,64,17,17,17,17,17,17,64, 0,
                    0,64,17,17,17,17,17,17,64, 0,
                    0,64,16,16,16,16,16,16,64, 0,
                    0,64,64,64,64,64,64,64,64, 0,
                    0, 0, 0,64,64,64,64, 0, 0, 0,
                    0, 0, 0,64,64,64,64, 0, 0, 0,
                    0, 0,64,64,64,64,64,64, 0, 0,
                };
            }
            else if (c == 'P')
            {
                return new int[]{
                    0, 0, 0, 0,36,36, 0, 0, 0, 0,
                    0, 0, 0, 0,36,36, 0, 0, 0, 0,
                    0, 0,36, 0,36,36, 0,36, 0, 0,
                    0,36, 0, 0,36,36, 0, 0,36, 0,
                    0,36, 0, 0,36,36, 0, 0,36, 0,
                    0,36, 0, 0, 0, 0, 0, 0,36, 0,
                    0,36, 0, 0, 0, 0, 0, 0,36, 0,
                    0, 0,36, 0, 0, 0, 0,36, 0, 0,
                    0, 0, 0,36,36,36,36, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                };
            }
            else if (c == 'X')
            {
                return new int[]{
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0,36,36,36,36,36,36, 0, 0,
                    0,36,36, 0, 0, 0, 0,36,36, 0,
                    0,36, 0,36, 0, 0,36, 0,36, 0,
                    0,36, 0, 0,36,36, 0, 0,36, 0,
                    0,36, 0, 0,36,36, 0, 0,36, 0,
                    0,36, 0,36, 0, 0,36, 0,36, 0,
                    0,36,36, 0, 0, 0, 0,36,36, 0,
                    0, 0,36,36,36,36,36,36, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                };
            }
            else if (c == 'M')
            {
                return new int[]{
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0,11,11,11,11,11,11, 0, 0,
                    0,11, 0, 0, 0, 0, 0, 0,11, 0,
                    0,11, 0, 0,11,11, 0, 0,11, 0,
                    0,11, 0,11, 0, 0,11, 0,11, 0,
                    0,11, 0,11, 0, 0,11, 0,11, 0,
                    0,11, 0, 0,11,11, 0, 0,11, 0,
                    0,11, 0, 0, 0, 0, 0, 0,11, 0,
                    0, 0,11,11,11,11,11,11, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                };
            }
            else if (c == '_')
            {
                return new int[]{
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0,11,11,11,11,11,11, 0, 0,
                    0,11, 0, 0, 0, 0, 0, 0,11, 0,
                    0,11, 0, 0, 0, 0, 0, 0,11, 0,
                    0,11, 0, 0, 0, 0, 0, 0,11, 0,
                    0,11, 0, 0, 0, 0, 0, 0,11, 0,
                    0,11, 0,11,11,11, 0, 0,11, 0,
                    0,11, 0, 0, 0, 0, 0, 0,11, 0,
                    0, 0,11,11,11,11,11,11, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                };
            }
            else
            {
                return new int[]{
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                };
            }
            //1258
        }
    }
}
